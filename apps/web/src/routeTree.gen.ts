/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as LandingRouteImport } from './routes/landing'
import { Route as FlowRouteImport } from './routes/flow'
import { Route as DocsRouteImport } from './routes/docs'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DocsFlowRouteImport } from './routes/docs.flow'
import { Route as DocsFlowValidateRouteImport } from './routes/docs.flow.validate'
import { Route as DocsFlowStatusRouteImport } from './routes/docs.flow.status'
import { Route as DocsFlowRollbackRouteImport } from './routes/docs.flow.rollback'
import { Route as DocsFlowQuickStartRouteImport } from './routes/docs.flow.quick-start'
import { Route as DocsFlowPlanRouteImport } from './routes/docs.flow.plan'
import { Route as DocsFlowInstallationRouteImport } from './routes/docs.flow.installation'
import { Route as DocsFlowHistoryRouteImport } from './routes/docs.flow.history'
import { Route as DocsFlowGenerateRouteImport } from './routes/docs.flow.generate'
import { Route as DocsFlowCiRouteImport } from './routes/docs.flow.ci'
import { Route as DocsFlowApplyRouteImport } from './routes/docs.flow.apply'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const LandingRoute = LandingRouteImport.update({
  id: '/landing',
  path: '/landing',
  getParentRoute: () => rootRouteImport,
} as any)
const FlowRoute = FlowRouteImport.update({
  id: '/flow',
  path: '/flow',
  getParentRoute: () => rootRouteImport,
} as any)
const DocsRoute = DocsRouteImport.update({
  id: '/docs',
  path: '/docs',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DocsFlowRoute = DocsFlowRouteImport.update({
  id: '/flow',
  path: '/flow',
  getParentRoute: () => DocsRoute,
} as any)
const DocsFlowValidateRoute = DocsFlowValidateRouteImport.update({
  id: '/validate',
  path: '/validate',
  getParentRoute: () => DocsFlowRoute,
} as any)
const DocsFlowStatusRoute = DocsFlowStatusRouteImport.update({
  id: '/status',
  path: '/status',
  getParentRoute: () => DocsFlowRoute,
} as any)
const DocsFlowRollbackRoute = DocsFlowRollbackRouteImport.update({
  id: '/rollback',
  path: '/rollback',
  getParentRoute: () => DocsFlowRoute,
} as any)
const DocsFlowQuickStartRoute = DocsFlowQuickStartRouteImport.update({
  id: '/quick-start',
  path: '/quick-start',
  getParentRoute: () => DocsFlowRoute,
} as any)
const DocsFlowPlanRoute = DocsFlowPlanRouteImport.update({
  id: '/plan',
  path: '/plan',
  getParentRoute: () => DocsFlowRoute,
} as any)
const DocsFlowInstallationRoute = DocsFlowInstallationRouteImport.update({
  id: '/installation',
  path: '/installation',
  getParentRoute: () => DocsFlowRoute,
} as any)
const DocsFlowHistoryRoute = DocsFlowHistoryRouteImport.update({
  id: '/history',
  path: '/history',
  getParentRoute: () => DocsFlowRoute,
} as any)
const DocsFlowGenerateRoute = DocsFlowGenerateRouteImport.update({
  id: '/generate',
  path: '/generate',
  getParentRoute: () => DocsFlowRoute,
} as any)
const DocsFlowCiRoute = DocsFlowCiRouteImport.update({
  id: '/ci',
  path: '/ci',
  getParentRoute: () => DocsFlowRoute,
} as any)
const DocsFlowApplyRoute = DocsFlowApplyRouteImport.update({
  id: '/apply',
  path: '/apply',
  getParentRoute: () => DocsFlowRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/docs': typeof DocsRouteWithChildren
  '/flow': typeof FlowRoute
  '/landing': typeof LandingRoute
  '/login': typeof LoginRoute
  '/docs/flow': typeof DocsFlowRouteWithChildren
  '/docs/flow/apply': typeof DocsFlowApplyRoute
  '/docs/flow/ci': typeof DocsFlowCiRoute
  '/docs/flow/generate': typeof DocsFlowGenerateRoute
  '/docs/flow/history': typeof DocsFlowHistoryRoute
  '/docs/flow/installation': typeof DocsFlowInstallationRoute
  '/docs/flow/plan': typeof DocsFlowPlanRoute
  '/docs/flow/quick-start': typeof DocsFlowQuickStartRoute
  '/docs/flow/rollback': typeof DocsFlowRollbackRoute
  '/docs/flow/status': typeof DocsFlowStatusRoute
  '/docs/flow/validate': typeof DocsFlowValidateRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/docs': typeof DocsRouteWithChildren
  '/flow': typeof FlowRoute
  '/landing': typeof LandingRoute
  '/login': typeof LoginRoute
  '/docs/flow': typeof DocsFlowRouteWithChildren
  '/docs/flow/apply': typeof DocsFlowApplyRoute
  '/docs/flow/ci': typeof DocsFlowCiRoute
  '/docs/flow/generate': typeof DocsFlowGenerateRoute
  '/docs/flow/history': typeof DocsFlowHistoryRoute
  '/docs/flow/installation': typeof DocsFlowInstallationRoute
  '/docs/flow/plan': typeof DocsFlowPlanRoute
  '/docs/flow/quick-start': typeof DocsFlowQuickStartRoute
  '/docs/flow/rollback': typeof DocsFlowRollbackRoute
  '/docs/flow/status': typeof DocsFlowStatusRoute
  '/docs/flow/validate': typeof DocsFlowValidateRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/docs': typeof DocsRouteWithChildren
  '/flow': typeof FlowRoute
  '/landing': typeof LandingRoute
  '/login': typeof LoginRoute
  '/docs/flow': typeof DocsFlowRouteWithChildren
  '/docs/flow/apply': typeof DocsFlowApplyRoute
  '/docs/flow/ci': typeof DocsFlowCiRoute
  '/docs/flow/generate': typeof DocsFlowGenerateRoute
  '/docs/flow/history': typeof DocsFlowHistoryRoute
  '/docs/flow/installation': typeof DocsFlowInstallationRoute
  '/docs/flow/plan': typeof DocsFlowPlanRoute
  '/docs/flow/quick-start': typeof DocsFlowQuickStartRoute
  '/docs/flow/rollback': typeof DocsFlowRollbackRoute
  '/docs/flow/status': typeof DocsFlowStatusRoute
  '/docs/flow/validate': typeof DocsFlowValidateRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/docs'
    | '/flow'
    | '/landing'
    | '/login'
    | '/docs/flow'
    | '/docs/flow/apply'
    | '/docs/flow/ci'
    | '/docs/flow/generate'
    | '/docs/flow/history'
    | '/docs/flow/installation'
    | '/docs/flow/plan'
    | '/docs/flow/quick-start'
    | '/docs/flow/rollback'
    | '/docs/flow/status'
    | '/docs/flow/validate'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/docs'
    | '/flow'
    | '/landing'
    | '/login'
    | '/docs/flow'
    | '/docs/flow/apply'
    | '/docs/flow/ci'
    | '/docs/flow/generate'
    | '/docs/flow/history'
    | '/docs/flow/installation'
    | '/docs/flow/plan'
    | '/docs/flow/quick-start'
    | '/docs/flow/rollback'
    | '/docs/flow/status'
    | '/docs/flow/validate'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/docs'
    | '/flow'
    | '/landing'
    | '/login'
    | '/docs/flow'
    | '/docs/flow/apply'
    | '/docs/flow/ci'
    | '/docs/flow/generate'
    | '/docs/flow/history'
    | '/docs/flow/installation'
    | '/docs/flow/plan'
    | '/docs/flow/quick-start'
    | '/docs/flow/rollback'
    | '/docs/flow/status'
    | '/docs/flow/validate'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRoute: typeof DashboardRoute
  DocsRoute: typeof DocsRouteWithChildren
  FlowRoute: typeof FlowRoute
  LandingRoute: typeof LandingRoute
  LoginRoute: typeof LoginRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/landing': {
      id: '/landing'
      path: '/landing'
      fullPath: '/landing'
      preLoaderRoute: typeof LandingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/flow': {
      id: '/flow'
      path: '/flow'
      fullPath: '/flow'
      preLoaderRoute: typeof FlowRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/docs': {
      id: '/docs'
      path: '/docs'
      fullPath: '/docs'
      preLoaderRoute: typeof DocsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/docs/flow': {
      id: '/docs/flow'
      path: '/flow'
      fullPath: '/docs/flow'
      preLoaderRoute: typeof DocsFlowRouteImport
      parentRoute: typeof DocsRoute
    }
    '/docs/flow/validate': {
      id: '/docs/flow/validate'
      path: '/validate'
      fullPath: '/docs/flow/validate'
      preLoaderRoute: typeof DocsFlowValidateRouteImport
      parentRoute: typeof DocsFlowRoute
    }
    '/docs/flow/status': {
      id: '/docs/flow/status'
      path: '/status'
      fullPath: '/docs/flow/status'
      preLoaderRoute: typeof DocsFlowStatusRouteImport
      parentRoute: typeof DocsFlowRoute
    }
    '/docs/flow/rollback': {
      id: '/docs/flow/rollback'
      path: '/rollback'
      fullPath: '/docs/flow/rollback'
      preLoaderRoute: typeof DocsFlowRollbackRouteImport
      parentRoute: typeof DocsFlowRoute
    }
    '/docs/flow/quick-start': {
      id: '/docs/flow/quick-start'
      path: '/quick-start'
      fullPath: '/docs/flow/quick-start'
      preLoaderRoute: typeof DocsFlowQuickStartRouteImport
      parentRoute: typeof DocsFlowRoute
    }
    '/docs/flow/plan': {
      id: '/docs/flow/plan'
      path: '/plan'
      fullPath: '/docs/flow/plan'
      preLoaderRoute: typeof DocsFlowPlanRouteImport
      parentRoute: typeof DocsFlowRoute
    }
    '/docs/flow/installation': {
      id: '/docs/flow/installation'
      path: '/installation'
      fullPath: '/docs/flow/installation'
      preLoaderRoute: typeof DocsFlowInstallationRouteImport
      parentRoute: typeof DocsFlowRoute
    }
    '/docs/flow/history': {
      id: '/docs/flow/history'
      path: '/history'
      fullPath: '/docs/flow/history'
      preLoaderRoute: typeof DocsFlowHistoryRouteImport
      parentRoute: typeof DocsFlowRoute
    }
    '/docs/flow/generate': {
      id: '/docs/flow/generate'
      path: '/generate'
      fullPath: '/docs/flow/generate'
      preLoaderRoute: typeof DocsFlowGenerateRouteImport
      parentRoute: typeof DocsFlowRoute
    }
    '/docs/flow/ci': {
      id: '/docs/flow/ci'
      path: '/ci'
      fullPath: '/docs/flow/ci'
      preLoaderRoute: typeof DocsFlowCiRouteImport
      parentRoute: typeof DocsFlowRoute
    }
    '/docs/flow/apply': {
      id: '/docs/flow/apply'
      path: '/apply'
      fullPath: '/docs/flow/apply'
      preLoaderRoute: typeof DocsFlowApplyRouteImport
      parentRoute: typeof DocsFlowRoute
    }
  }
}

interface DocsFlowRouteChildren {
  DocsFlowApplyRoute: typeof DocsFlowApplyRoute
  DocsFlowCiRoute: typeof DocsFlowCiRoute
  DocsFlowGenerateRoute: typeof DocsFlowGenerateRoute
  DocsFlowHistoryRoute: typeof DocsFlowHistoryRoute
  DocsFlowInstallationRoute: typeof DocsFlowInstallationRoute
  DocsFlowPlanRoute: typeof DocsFlowPlanRoute
  DocsFlowQuickStartRoute: typeof DocsFlowQuickStartRoute
  DocsFlowRollbackRoute: typeof DocsFlowRollbackRoute
  DocsFlowStatusRoute: typeof DocsFlowStatusRoute
  DocsFlowValidateRoute: typeof DocsFlowValidateRoute
}

const DocsFlowRouteChildren: DocsFlowRouteChildren = {
  DocsFlowApplyRoute: DocsFlowApplyRoute,
  DocsFlowCiRoute: DocsFlowCiRoute,
  DocsFlowGenerateRoute: DocsFlowGenerateRoute,
  DocsFlowHistoryRoute: DocsFlowHistoryRoute,
  DocsFlowInstallationRoute: DocsFlowInstallationRoute,
  DocsFlowPlanRoute: DocsFlowPlanRoute,
  DocsFlowQuickStartRoute: DocsFlowQuickStartRoute,
  DocsFlowRollbackRoute: DocsFlowRollbackRoute,
  DocsFlowStatusRoute: DocsFlowStatusRoute,
  DocsFlowValidateRoute: DocsFlowValidateRoute,
}

const DocsFlowRouteWithChildren = DocsFlowRoute._addFileChildren(
  DocsFlowRouteChildren,
)

interface DocsRouteChildren {
  DocsFlowRoute: typeof DocsFlowRouteWithChildren
}

const DocsRouteChildren: DocsRouteChildren = {
  DocsFlowRoute: DocsFlowRouteWithChildren,
}

const DocsRouteWithChildren = DocsRoute._addFileChildren(DocsRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRoute,
  DocsRoute: DocsRouteWithChildren,
  FlowRoute: FlowRoute,
  LandingRoute: LandingRoute,
  LoginRoute: LoginRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
